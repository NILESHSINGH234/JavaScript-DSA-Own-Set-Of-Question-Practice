function mergeAndSortArrays(arr1, arr2) {
    // Calculate the total length of the merged array
    const totalLength = arr1.length + arr2.length;
    
    // Create a result array with the same length as the merged array
    const mergedArray = new Array(totalLength);
    
    let i = 0; // Index for arr1
    let j = 0; // Index for arr2
    let k = 0; // Index for mergedArray
    
    // Merge and sort the arrays
    while (i < arr1.length && j < arr2.length) {
      if (arr1[i] <=arr2[j]) {
        mergedArray[k] = arr1[i];
        k++;
        i++;
      } else {
        mergedArray[k] = arr2[j];
        k++;
        j++;}
    }
    
    // Add any remaining elements from arr1, if any
    while (i < arr1.length) {
      mergedArray[k] = arr1[i];
      k++;
      i++;
    }
    
    // Add any remaining elements from arr2, if any
    while (j < arr2.length) {
      mergedArray[k] = arr2[j];
      k++;
      j++;
    }
    
    return mergedArray;
  }
  
  const array1 = [3, 1, 4];
  const array2 = [2, 5, 7];
  const sortedArray = mergeAndSortArrays(array1, array2);
  console.log("Sorted and Merged Array:", sortedArray);
  
